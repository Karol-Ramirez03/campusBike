--nuuevas ventas y detalles venta y actualizar el stock
--procedimiento de insert y triggers para verificar el stock

/*
1. El vendedor ingresa al sistema.
2. El vendedor selecciona la opci√≥n para registrar una nueva venta.
3. El vendedor selecciona el cliente que realiza la compra.
4. El vendedor selecciona las bicicletas que el cliente desea comprar y especifica la cantidad.
5. El sistema calcula el total de la venta.
6. El vendedor confirma la venta.
7. El sistema guarda la venta y actualiza el inventario de bicicletas.
*/


DELIMITER $$
DROP PROCEDURE IF EXISTS registrarVentaConDetalles$$
CREATE PROCEDURE registrarVentaConDetalles(
    IN clienteid VARCHAR(10),
    IN biciId INT,
    IN Cantidad INT,
    OUT outVentaId INT 
)
BEGIN
    DECLARE precioUnitario DOUBLE;
    DECLARE totalDetalle DOUBLE;
    
    INSERT INTO venta(fecha_venta, id_cliente, total)
    VALUES (NOW(), clienteid,0);

    SET outVentaId = LAST_INSERT_ID();
    
    SELECT precio INTO precioUnitario
    FROM bicicleta
    WHERE id = biciId;

    SET totalDetalle = precioUnitario * Cantidad;

    INSERT INTO detalle_venta (id_venta, id_bicicleta, cantidad, precio_unitario)
    VALUES (outVentaId, biciId, Cantidad, precioUnitario);

    UPDATE venta
    SET total = totalDetalle
    WHERE id = outVentaId;

    UPDATE bicicleta
    SET stock = stock - Cantidad
    WHERE id = biciId;
    
END $$

DELIMITER ;

-- triggers para verificar el stock


DELIMITER $$
DROP TRIGGER IF EXISTS verificaionStock$$
CREATE TRIGGER verificaionStock
BEFORE INSERT ON detalle_Venta
FOR EACH ROW
BEGIN
    DECLARE stockActual INT;
    
    -- Obtener el stock actual de la bicicleta --
    SELECT stock INTO stockActual
    FROM bicicleta
    WHERE id = NEW.id_bicicleta;
    
    -- Verificar que el stock sea suficiente --
    IF stockActual < NEW.cantidad THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Stock insuficiente para la bicicleta seleccionada';
    END IF;
END;
DELIMITER ;

