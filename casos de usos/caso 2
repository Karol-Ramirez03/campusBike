//nuuevas ventas y detalles venta y actualizar el stock
procedimiento de insert y triggers para verificar el stock




DELIMITER $$
DROP PROCEDURE IF EXISTS registrarDetalleVenta$$
CREATE PROCEDURE RegistrarDetalleVenta(
    IN inVentaId INT,
    IN inBicicletaId INT,
    IN inCantidad INT
)

BEGIN
    DECLARE precioUnitario DECIMAL(10, 2);
    DECLARE totalDetalle DECIMAL(10, 2);
    
    -- Obtener el precio unitario de la bicicleta --
    SELECT precio INTO precioUnitario
    FROM bicicleta
    WHERE id = inBicicletaId;
    
    -- Calcular el total del detalle
    SET totalDetalle = precioUnitario * inCantidad;
    
    -- Insertar el detalle de la venta
    INSERT INTO detalleVenta (ventaId, bicicletaId, cantidad, precioUnitario)
    VALUES (inVentaId, inBicicletaId, inCantidad, precioUnitario);
    
    -- Actualizar el total de la venta --
    UPDATE venta
    SET total = total + totalDetalle
    WHERE id = inVentaId;
    
    -- Actualizar el inventario de bicicletas --
    UPDATE bicicleta
    SET stock = stock - inCantidad
    WHERE id = inBicicletaId;
END $$
DELIMITER ;

triggers


DELIMITER $$
DROP TRIGGER IF EXISTS verificarStockAntesDeVenta$$
CREATE TRIGGER verificarStockAntesDeVenta
BEFORE INSERT ON detalleVenta
FOR EACH ROW
BEGIN
    DECLARE stockActual INT;
    
    -- Obtener el stock actual de la bicicleta --
    SELECT stock INTO stockActual
    FROM bicicleta
    WHERE id = NEW.bicicletaId;
    
    -- Verificar que el stock sea suficiente --
    IF stockActual < NEW.Cantidad THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Stock insuficiente para la bicicleta seleccionada';
    END IF;
END $$
DELIMITER ;
