/*
1. El administrador de inventario ingresa al sistema.
2. El administrador selecciona la opción para agregar una nueva bicicleta.
3. El administrador ingresa los detalles de la bicicleta (modelo, marca, precio, stock).
4. El sistema valida y guarda la información de la nueva bicicleta.
5. El administrador selecciona una bicicleta existente para actualizar.
6. El administrador actualiza la información (precio, stock).
7. El sistema valida y guarda los cambios.
8. El administrador selecciona una bicicleta para eliminar.
9. El sistema elimina la bicicleta seleccionada del inventario
*/

-- procedimiento para agregar cicla
DELIMITER $$
CREATE PROCEDURE addBicicleta(
    IN modeloid INT,
    IN marcaid INT,
    IN precios DOUBLE,
    IN stockbici INT
)
BEGIN
    INSERT INTO bicicleta (id_modelo_bicicleta, id_marca_bicicleta, precio, stock) 
    VALUES (modeloid, marcaid, precios, stockbici);
END $$
DELIMITER ;


--procedimient para actualizar
DELIMITER $$
CREATE PROCEDURE updateStockBici(
    IN BicicletaId INT,
    IN Precio DOUBLE,
    IN Stock INT
)
BEGIN
    UPDATE bicicleta
    SET precio = Precio, stock = Stock
    WHERE id = BicicletaId;
END$$
DELIMITER ;

--procedimiento para eliminar

DELIMITER $$
CREATE PROCEDURE deleteBici(
    IN idBici INT
)
BEGIN
    DELETE FROM bicicleta
    WHERE id = idBici;
END$$
DELIMITER ;


--triggers para verificar las entradas

DELIMITER $$
CREATE TRIGGER validar_campos_obligatorios
BEFORE INSERT ON bicicleta
FOR EACH ROW
BEGIN
    IF NEW.id_modelo_bicicleta IS NULL THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'El campo modelo es OBLIGATORIO y no puede ser NULL';
    END IF;
    IF NEW.id_marca_bicicleta IS NULL THEN 
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'El campo marca es OBLIGATORIO y no puede ser NULL';
    END IF;
    IF NEW.precio IS NULL THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'El campo precio es OBLIGATORIO y no puede ser NULL';
    END IF;
    IF NEW.stock IS NULL THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'El campo stock es OBLIGATORIO y no puede ser NULL';
    END IF;
END $$
DELIMITER ;



DELIMITER $$
DROP TRIGGER IF EXISTS stockNegativoIns $$
CREATE TRIGGER stockNegativoIns
BEFORE INSERT ON bicicleta
FOR EACH ROW
BEGIN
    IF NEW.stock < 0 OR NEW.precio < 0 THEN 
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'El "STOCK" y el "PRECIO" no pueden ser negativo';
    END IF;
END $$
DELIMITER ;




DELIMITER $$ 
DROP TRIGGER IF EXISTS validar_campos_obligatorios_upd$$
CREATE TRIGGER validar_campos_obligatorios_upd
BEFORE UPDATE ON bicicleta
FOR EACH ROW
BEGIN
    IF NEW.precio IS NULL THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'El campo precio es OBLIGATORIO y no puede ser NULL';
    END IF;
    IF NEW.stock IS NULL THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'El campo stock es OBLIGATORIO y no puede ser NULL';
    END IF;
END$$

DELIMITER ;

